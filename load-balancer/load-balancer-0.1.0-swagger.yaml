openapi: 3.0.0
info:
  version: 0.1.0
  title: Load Balancer API
paths:
  '/workers':
    put:
      summary: >-
        Update worker information
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                uuid: 
                  type: string
                  description: Worker's unique identifier
                url:
                  type: string
                  description: Worker's base URL
                cpuPercentage:
                  type: number
                  description: Worker's CPU usage
                rooms:
                  type: array
                  items:
                    type: string
                  description: Room IDs
                peers:
                  type: array
                  items:
                    type: string
                  description: Peers' socket-io IDs
                transports:
                  type: array
                  items:
                    type: string
                  description: Transports IDs
                producers:
                  type: array
                  items:
                    type: string
                  description: Producers IDs
                consumers:
                  type: array
                  items:
                    type: string
                  description: Consumers IDs
              required: 
                - uuid
                - url
                - cpuPercentage
                - rooms
                - peers
                - transports
                - producers
                - consumers
      responses:
        '200':
          description: Worker information updated
        '400':
          description: Bad Request. Client-side input fails validation
  '/workers/:uuid':
    delete:
      summary: >-
        Set worker in draining mode.
      responses:
        '200':
          description: Worker set as draining. No new rooms will be created inside this worker
        '404':
          description: Worker not found
  '/client/rooms':
    post:
      summary: >- 
        Create a room in one of media-workers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                roomName:
                  type: string
                  description: Name of the room (its unique identifier)
              required: 
                - roomName
      responses:
        '200':
          description: Room created
          content:
            'application/json':
              example: 
                {
                  'routerRtpCapabilities':{'codecs':[], 'headerExtensions':[]}
                }
        '400':
          description: roomName is not defined
        '502':
          description: Could not create the room
        '503':
          description: Worker is unavailable
  '/client/rooms/:roomName/peers':
    post:
      summary: >-
        Join a peer to a room
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                socketId:
                  type: string
                  description: Peer's socket-io ID
              required:
                - socketId
      responses:
        '200':
          description: Peer joined room
          content:
            'application/json':
              schema:
                type: object
                properties:
                  roomName: 
                    type: string
                  socketId:
                    type: string
        '400':
          description: socketId is not defined
        '502':
          description: Could join peer into the room
        '503':
          description: Worker is unavailable                   
  '/client/rooms/:roomName/peers/:socketId':
    delete:
      summary: >-
        Leave a peer out of the room. Close the room if empty
      responses:
        '200':
          description: Peer left room
          content:
            'application/json':
              schema:
                type: object
                properties:
                  roomName: 
                    type: string
                  socketId:
                    type: string
        '502':
          description: Could not leave peer out of the room
        '503':
          description: Worker is unavailable 
  '/client/rooms/:roomName/transports':
    post:
      summary: >-
        Create a new mediasoup transport
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                fromSocketId:
                  type: string
                direction:
                  type: string
                  enum:
                    - 'send'
                    - 'recv'
                toSocketId:
                  type: string
              required:
                - fromSocketId
                - direction
      responses:
        '200':
          description: Transport created
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transportOptions:
                    type: object
                    properties:
                      id:
                        type: string
                      iceParameters:
                        type: object
                      iceCandidates:
                        type: array
                        items:
                          type: object
                      dtlsParameters:
                        type: object
        '400':
          description: Bad Request. Client-side input fails validation
        '502':
          description: Could not create transport
        '503':
          description: Worker is unavailable           
  '/client/rooms/:roomName/transports/:transportId':
    put:
      summary: Connect a transport
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                fromSocketId:
                  type: string
                dtlsParameters:
                  type: object
              required:
                - fromSocketId
                - dtlsParameters
      responses:
        '200':
          description: Transport connected
        '400':
          description: Bad Request. Client-side input fails validation
        '502':
          description: Could not connect/update transport
        '503':
          description: Worker is unavailable
  '/client/rooms/:roomName/transports/:transportId/producers':
    post:
      summary: Create a video producer in the transport
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                socketId:
                  type: string
                kind:
                  type: string
                  enum:
                    - 'video'
                    - 'audio'
                rtpParameters:
                  type: object
                appData:
                  type: object
              required: 
                - socketId
                - kind
                - rtpParameters
      responses:
        '200':
          description: Producer created
          content:
            'application/json':
              schema:
                type: object
                properties:
                  producerId:
                    type: string
        '400':
          description: Bad Request. Client-side input fails validation
        '502':
          description: Could not create producer
        '503':
          description: Worker is unavailable
  '/client/rooms/:roomName/transports/:transportId/consumers':
    post:
      summary: Create a video consumer in the transport
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                fromSocketId:
                  type: string
                toSocketId:
                  type: string
                rtpCapabilities:
                  type: object
              required: 
                - fromSocketId
                - toSocketId
                - rtpCapabilities
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Consumer id
                  producerId:
                    type: string
                  kind:
                    type: string
                    description: Consumer's type
                    enum:
                      - 'video'
                      - 'audio'
                  rtpParameters:
                    type: object
                  type:
                    type: string
                    description: One of mediasoup's ConsumerType
                  producerPaused:
                    type: boolean
                    description: Whether the associated producer is paused.
        '400':
          description: Bad Request. Client-side input fails validation
        '502':
          description: Could not create consumer
        '503':
          description: Worker is unavailable