openapi: 3.0.0
servers: []
info:
  version: 1.0.0
  title: media-worker-server API
  description: >-
    This is an example of using media-worker-server's REST API
paths:
  /rooms/:roomName:
    get:
      summary: >-
        Return an object with parameters needed by mediasoup clients to start 
        establishing a connection to a given room
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              example:
                {
                  'routerRtpCapabilities':{'codecs':[], 'headerExtensions':[]}
                }
  /rooms/:roomName/peers:  
    post:
      summary: >-
        Join a peer into the room. Creates the room if not exists
      requestBody:
        required: true
        content: 
          'application/json':
            schema:
              type: object
              properties: 
                socketId:
                  type: string
      responses:
        '200':
          description: Ok
  /rooms/:roomName/peers/:socketId:
    delete:
      summary: >-
        Leave a peer out of the room. Close the room if empty
      responses:
        '200':
          description: Ok
  /rooms/:roomName/transports:
    post:
      summary: >-
        Create a new transport in the media worker
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                fromSocketId:
                  type: string
                direction:
                  type: string
                  enum:
                    - 'send'
                    - 'recv'
                toSocketId:
                  type: string
              required:
                - fromSocketId
                - direction
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                type: object
                properties:
                  transportOptions:
                    type: object
                    properties:
                      id:
                        type: string
                      iceParameters:
                        type: object
                      iceCandidates:
                        type: array
                        items:
                          type: object
                      dtlsParameters:
                        type: object
  /rooms/:roomName/transports/:transportId:
    put:
      summary: >-
        Connect a transport
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                socketId:
                  type: string
                dtlsParameters:
                  type: object
              required:
                - socketId
                - dtlsParameters
      responses:
        '200':
          description: Ok
        '404':
          description: Transport not found
        '403':
          description: Transport is forbidden for socketId
        '500':
          description: Can't connect transport
  /rooms/:roomName/transports/:transportId/producers:
    post:
      summary: >-
        Create a producer in the transport
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                socketId:
                  type: string
                kind:
                  type: string
                  enum:
                    - 'video'
                    - 'audio'
                rtpParameters:
                  type: object
                paused:
                  type: boolean
                appData:
                  type: object
                  properties:
                    mediaTag:
                      type: string
                      enum:
                        - 'camera-video'
                        - 'camera-audio'
              required: 
                - socketId
                - kind
                - rtpParameters
                - paused
                - appData
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                type: object
                properties:
                  producerId:
                    type: string
        '404':
          description: Transport not found
        '403':
          description: Transport is forbidden for socketId
        '500':
          description: Can't create producer                    
      
  /rooms/:roomName/transports/:transportId/consumers:
    post:
      summary: >-
        Create a consumer in the transport
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                fromSocketId:
                  type: string
                toSocketId:
                  type: string
                mediaTag:
                  type: string
                  enum:
                    - 'camera-video'
                    - 'camera-audio'
                rtpCapabilities:
                  type: object
              required: 
                - fromSocketId
                - toSocketId
                - mediaTag
                - rtpCapabilities
      responses:
        '200':
          description: Ok
          content:
            'application/json':
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Consumer id
                  producerId:
                    type: string
                  kind:
                    type: string
                    description: Consumer's type
                    enum:
                      - 'video'
                      - 'audio'
                  rtpParameters:
                    type: object
                  type:
                    type: string
                    description: One of mediasoup's ConsumerType
                  producerPaused:
                    type: boolean
                    description: Whether the associated producer is paused.
        '404':
          description: Producer or transport not found
        '500':
          description: Router can't consume from producer